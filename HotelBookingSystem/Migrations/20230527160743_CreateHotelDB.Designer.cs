// <auto-generated />
using System;
using HotelBookingSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelBookingSystem.Migrations
{
    [DbContext(typeof(HotelBookingDBContext))]
    [Migration("20230527160743_CreateHotelDB")]
    partial class CreateHotelDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelBookingSystem.Models.BookedDetails", b =>
                {
                    b.Property<int>("BookingID")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int?>("HotelDetailsHotelID")
                        .HasColumnType("int");

                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.HasKey("BookingID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("HotelDetailsHotelID");

                    b.HasIndex("RoomID");

                    b.ToTable("BookedDetails");
                });

            modelBuilder.Entity("HotelBookingSystem.Models.Customer", b =>
                {
                    b.Property<int>("CusID")
                        .HasColumnType("int");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CusID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("HotelBookingSystem.Models.HotelDetails", b =>
                {
                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<string>("Amenities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HotelID");

                    b.ToTable("HotelDetails");
                });

            modelBuilder.Entity("HotelBookingSystem.Models.RoomDetails", b =>
                {
                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<int?>("HotelDetailsHotelID")
                        .HasColumnType("int");

                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<double?>("RoomPrice")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<string>("RoomStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomID");

                    b.HasIndex("HotelDetailsHotelID");

                    b.ToTable("RoomDetails");
                });

            modelBuilder.Entity("HotelBookingSystem.Models.BookedDetails", b =>
                {
                    b.HasOne("HotelBookingSystem.Models.Customer", "Customer")
                        .WithMany("BookedDetails")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBookingSystem.Models.HotelDetails", null)
                        .WithMany("BookedDetails")
                        .HasForeignKey("HotelDetailsHotelID");

                    b.HasOne("HotelBookingSystem.Models.RoomDetails", "RoomDetails")
                        .WithMany("BookedDetails")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("RoomDetails");
                });

            modelBuilder.Entity("HotelBookingSystem.Models.RoomDetails", b =>
                {
                    b.HasOne("HotelBookingSystem.Models.HotelDetails", null)
                        .WithMany("RoomDetails")
                        .HasForeignKey("HotelDetailsHotelID");
                });

            modelBuilder.Entity("HotelBookingSystem.Models.Customer", b =>
                {
                    b.Navigation("BookedDetails");
                });

            modelBuilder.Entity("HotelBookingSystem.Models.HotelDetails", b =>
                {
                    b.Navigation("BookedDetails");

                    b.Navigation("RoomDetails");
                });

            modelBuilder.Entity("HotelBookingSystem.Models.RoomDetails", b =>
                {
                    b.Navigation("BookedDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
